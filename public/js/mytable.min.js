/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 58);
/******/ })
/************************************************************************/
/******/ ({

/***/ 58:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(59);


/***/ }),

/***/ 59:
/***/ (function(module, exports) {

var first_load_flag = 1;

// При загрузке страницы модуля отображаем первую страницу таблицы.
$(document).ready(function () {
	loadPage(1);
	console.log(location.href);
});

function loadPage(pageNum) {
	var search_string = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	var reset_paginate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;


	axios.post(location.href + '/list/json', { page: pageNum, search_string: search_string }).then(function (response) {
		var data = response.data;
		var row = "";
		var html = "";
		var html_card = "";
		var basic = "";
		var column = "";

		var mytable = $('#mytable');

		var tbody = mytable.find('tbody');

		for (var key in data['items']) {
			row = data['items'][key];
			row['pagenum'] = pageNum;
			tbody.append($("#mytableTemplate").tmpl(row));
			if ($("#mycardsTemplate").length > 0) {
				$('.offers-list-cards-content').append($("#mycardsTemplate").tmpl(row));
			}
		}

		if (first_load_flag == 1) {
			drawPaginate(data['count']);
			first_load_flag = 0;
			setActivePage(1);
		}
		// Для поиска

		if (search_string !== null) {
			drawPaginate(data['count']);
			setActivePage(1);
		}
		if (reset_paginate !== null) {
			drawPaginate(data['count']);
			setActivePage(1);
		}

		//
	});
}

function drawPaginate(count) {

	var html = '<ul class="pagination">' + '<li id="paginate_button previous" class="previous">' + '<a onclick="return false;">Пред.</a>' + '</li>';

	for (var i = 1; i < count + 1; i++) {
		html += "<li data-pagenum='" + i + "' class='paginate_button page'><a onclick='return false'>" + i + "</a>";
	}

	html += '<li class="paginate_button next"><a onclick="return false;">След.</a></li></ul>';

	$('.dataTables_paginate').html(html);
}

$(document).on('click', '.page', function (el) {
	var pageNum = $(this).attr('data-pagenum');
	var page_loaded = $(this).attr('loaded');
	if (page_loaded != "1") {
		loadPage(pageNum);
	}
	setActivePage(pageNum);
});

function setActivePage(pageNum) {

	var pagecount = $('.page').length;

	if (parseInt(pageNum) < 1) {
		pageNum = 1;
	}

	if (parseInt(pageNum) > pagecount) {
		pageNum = 1;
	}

	/* Убираем класс Active */
	$('.page').removeClass('active');

	/* Добавляем класс active нужной кнопке в пагинации */
	$('.page[data-pagenum="' + pageNum + '"]').addClass('active');

	var offers_list_cards_content = $('.offers-list-cards-content');
	offers_list_cards_content.find('.offer-card').hide();
	offers_list_cards_content.find('.offer-card[data-page="' + pageNum + '"]').show();

	//Таблица
	var mytable = $('#mytable');
	mytable.find('tbody').find('tr').hide();
	mytable.find('tbody').find('tr[data-page="' + pageNum + '"]').show();

	if ($('.card').length > 0) {
		$('.card').hide();
		$('.card[data-page="' + pageNum + '"]').show();
	}

	$('.page[data-pagenum="' + pageNum + '"]').attr('loaded', 1);
	//addCardTitles();

	$('.page').hide();
	$('.page[data-pagenum=' + pageNum + ']').show();

	for (var o = pageNum; o < parseInt(pageNum) + 3; o++) {
		// console.log(" pagenum : " + pageNum + " and o : " + o + " and uslovie = " + parseInt(pageNum+3));
		if (o > pagecount) {
			break;
		}
		$('.page[data-pagenum=' + o + ']').show();
	}

	if (parseInt(pageNum) + 3 < pagecount) {
		$('.page[data-pagenum=' + pagecount + ']').show();
	}

	if (parseInt(pageNum) < 4) {
		$('.page[data-pagenum=1]').show();
		$('.page[data-pagenum=2]').show();
		$('.page[data-pagenum=3]').show();
	}

	if (parseInt(pageNum) - 3 > 0) {
		$('.page[data-pagenum=1]').show();
	}

	for (var _o = pageNum; _o > parseInt(pageNum) - 3; _o--) {
		if (_o < 1) {
			break;
		}
		$('.page[data-pagenum=' + _o + ']').show();
	}
}

$(document).on('click', '.previous', function (el) {

	var pagination = $('.pagination');
	var active_page = pagination.find('.active').attr('data-pagenum');
	var page_loaded = 0;
	if (active_page > 1) {
		page_loaded = pagination.find('.active').prev().attr('loaded');
	} else {
		page_loaded = pagination.find('.active').last().attr('loaded');
	}

	if (page_loaded != "1") {
		loadPage(parseInt(active_page) - 1);
	}
	setActivePage(parseInt(active_page) - 1);
});

$(document).on('click', '.next', function (el) {
	var pagination = $('.pagination');
	var active_page = pagination.find('.active').attr('data-pagenum');
	var page_loaded = pagination.find('.active').next().attr('loaded');

	if (page_loaded != "1") {
		loadPage(parseInt(active_page) + 1);
	}
	setActivePage(parseInt(active_page) + 1);
});

function getActivePage() {
	var active_page = $('.pagination').find('.active').attr('data-pagenum');
	return active_page;
}

function eraseTable() {
	$('.offers-list-cards-content').find('.offer-card').remove();
	$('#mytable').find('tbody').find('tr').remove();

	$('.offers-list-cards-content').html('');

	$('.page').removeClass('active').attr('loaded', '0');
}

//Search

var typingTimer;
var doneTypingInterval = 1000;

$('#offer-search').keyup(function () {
	clearTimeout(typingTimer);
	typingTimer = setTimeout(doneTyping, doneTypingInterval);
});

function doneTyping() {
	var search_string = $('#offer-search').val();
	if (search_string.length > 3) {
		eraseTable();
		loadPage(1, search_string);
		setActivePage(1);
	} else if (search_string.length == 0) {
		eraseTable();
		loadPage(1, '', true);
		setActivePage(1);
	}
}

/***/ })

/******/ });