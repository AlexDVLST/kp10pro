/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 73);
/******/ })
/************************************************************************/
/******/ ({

/***/ 28:
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(74);


/***/ }),

/***/ 74:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Employee__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Employee___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_Employee__);


new window.Vue({
    el: '#app',
    components: { employee: __WEBPACK_IMPORTED_MODULE_0__components_Employee___default.a },
    data: {
        pageName: 'Добавление сотрудика'
    }
});

/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var normalizeComponent = __webpack_require__(28)
/* script */
var __vue_script__ = __webpack_require__(76)
/* template */
var __vue_template__ = __webpack_require__(77)
/* template functional */
  var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/assets/js/components/Employee.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-22d58e03", Component.options)
  } else {
    hotAPI.reload("data-v-22d58e03", Component.options)
' + '  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 76:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    pageName: { default: "" },
    id: { default: 0 },
    surname: { default: "" },
    name: { default: "" },
    middleName: { default: "" },
    email: { default: "" },
    phone: { default: "" },
    position: { default: "" },
    signature: { default: "" },
    fileId: { default: 0 },
    fileSrc: { default: "/storage/resource/no-avatar.png" }
  },
  data: function data() {
    return {
      employeeId: this.id, //Using for edit
      employeeSurname: this.surname,
      employeeName: this.name,
      employeeMiddleName: this.middleName,
      employeeEmail: this.email,
      employeePhone: this.phone,
      employeePosition: this.position,
      employeeSignature: this.signature,
      employeeFileId: this.fileId,
      employeeFileSrc: this.fileSrc,
      errors: { name: false, email: false, surname: false }
    };
  },

  mounted: function mounted() {
    var _this = this;

    // this.start();
    //Event when double click on image
    window.fileManager.$on("dblclick-image", function (data) {
      _this.employeeFileSrc = data.src;
      _this.employeeFileId = data.id;
      window.fileManager.closeModal();
    });
    //When cropper finished
    window.fileManager.$on("cropper-finished", function (data) {
      _this.employeeFileSrc = data.fileSrc;
      _this.employeeFileId = data.fileId;
    });
  },
  methods: {
    saveEmployee: function saveEmployee() {
      var data = {
        surname: this.employeeSurname,
        name: this.employeeName,
        middleName: this.employeeMiddleName,
        email: this.employeeEmail,
        phone: this.employeePhone,
        position: this.employeePosition,
        signature: this.employeeSignature,
        fileId: this.employeeFileId
      };

      axios.post("/settings/employees", data).then(function () {
        location.href = "/settings/employees/";
      }).catch(function (error) {
        window.ajaxError(error);
      });
    },
    //Check form for errors
    checkForm: function checkForm() {
      if (!this.employeeSurname) this.errors.surname = true;
      if (!this.employeeName) this.errors.name = true;
      if (!this.employeeEmail) this.errors.email = true;

      if (this.employeeName && this.employeeSurname && this.employeeEmail) {
        this.saveEmployee();
      }
    },
    removeError: function removeError(error) {
      if (this.errors[error]) {
        this.errors[error] = false;
      }
    },
    //Update src for image
    changeFile: function changeFile() {
      if (window.fileManager) {
        var path = window.fileManager.path;

        if (!/Сотрудники/.test(path)) {
          path += "/Сотрудники";
        }

        window.fileManager.show(path);
        window.fileManager.disabledApp = true;
      }
    }
  }
});

/***/ }),

/***/ 77:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "box box-primary", attrs: { id: "employee" } },
    [
      _c("div", { staticClass: "box-header with-border" }, [
        _c("h3", { staticClass: "box-title" }, [_vm._v(_vm._s(_vm.pageName))])
      ]),
      _vm._v(" "),
      _c(
        "form",
        {
          attrs: { role: "form" },
          on: {
            submit: function($event) {
              $event.preventDefault()
              _vm.checkForm($event)
            }
          }
        },
        [
          _c("div", { staticClass: "box-body" }, [
            _c("div", { staticClass: "col-md-10" }, [
              _c(
                "div",
                {
                  staticClass: "form-group",
                  class: [_vm.errors.surname ? "has-error" : ""]
                },
                [
                  _c("label", { attrs: { for: "name" } }, [_vm._v("Фамилия")]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.employeeSurname,
                        expression: "employeeSurname"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      id: "surname",
                      placeholder: "Фамилия"
                    },
                    domProps: { value: _vm.employeeSurname },
                    on: {
                      keyup: function($event) {
                        _vm.removeError("surname")
                      },
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.employeeSurname = $event.target.value
                      }
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "form-group",
                  class: [_vm.errors.name ? "has-error" : ""]
                },
                [
                  _c("label", { attrs: { for: "name" } }, [_vm._v("Имя")]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.employeeName,
                        expression: "employeeName"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: { type: "text", id: "name", placeholder: "Имя" },
                    domProps: { value: _vm.employeeName },
                    on: {
                      keyup: function($event) {
                        _vm.removeError("name")
                      },
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.employeeName = $event.target.value
                      }
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "form-group",
                  class: [_vm.errors.middleName ? "has-error" : ""]
                },
                [
                  _c("label", { attrs: { for: "name" } }, [_vm._v("Отчество")]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.employeeMiddleName,
                        expression: "employeeMiddleName"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      id: "middle-name",
                      placeholder: "Отчество"
                    },
                    domProps: { value: _vm.employeeMiddleName },
                    on: {
                      keyup: function($event) {
                        _vm.removeError("middleName")
                      },
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.employeeMiddleName = $event.target.value
                      }
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "form-group",
                  class: [_vm.errors.email ? "has-error" : ""]
                },
                [
                  _c("label", { attrs: { for: "email" } }, [_vm._v("Email")]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.employeeEmail,
                        expression: "employeeEmail"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      type: "email",
                      id: "email",
                      placeholder: "Email сотрудника"
                    },
                    domProps: { value: _vm.employeeEmail },
                    on: {
                      keyup: function($event) {
                        _vm.removeError("email")
                      },
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.employeeEmail = $event.target.value
                      }
                    }
                  })
                ]
              ),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { attrs: { for: "phone" } }, [_vm._v("Телефон")]),
                _vm._v(" "),
                _c("div", { staticClass: "input-group" }, [
                  _vm._m(0),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.employeePhone,
                        expression: "employeePhone"
                      }
                    ],
                    staticClass: "form-control",
                    attrs: {
                      type: "text",
                      id: "phone",
                      placeholder: "Телефон сотрудника"
                    },
                    domProps: { value: _vm.employeePhone },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.employeePhone = $event.target.value
                      }
                    }
                  })
                ])
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { attrs: { for: "position" } }, [
                  _vm._v("Должность")
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.employeePosition,
                      expression: "employeePosition"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: {
                    type: "text",
                    id: "position",
                    placeholder: "Должность сотрудника"
                  },
                  domProps: { value: _vm.employeePosition },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.employeePosition = $event.target.value
                    }
                  }
                })
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-group" }, [
                _c("label", { attrs: { for: "signature" } }, [
                  _vm._v("Подпись в коммерческом предложении")
                ]),
                _vm._v(" "),
                _c("textarea", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.employeeSignature,
                      expression: "employeeSignature"
                    }
                  ],
                  staticClass: "form-control",
                  attrs: { id: "signature", placeholder: "Подпись..." },
                  domProps: { value: _vm.employeeSignature },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.employeeSignature = $event.target.value
                    }
                  }
                })
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "col-md-2" }, [
              _c("div", { staticClass: "form-group" }, [
                _c("label", [_vm._v("Фото сотрудника")]),
                _vm._v(" "),
                _c("img", {
                  style: { border: "1px solid #d2d6de", width: "100%" },
                  attrs: { id: "avatar", src: _vm.employeeFileSrc },
                  on: { click: _vm.changeFile }
                })
              ])
            ])
          ]),
          _vm._v(" "),
          _vm._m(1)
        ]
      )
    ]
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "input-group-addon" }, [
      _c("i", { staticClass: "fa fa-phone" })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "box-footer" }, [
      _c(
        "button",
        { staticClass: "btn btn-primary", attrs: { type: "submit" } },
        [_vm._v("Сохранить")]
      )
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-22d58e03", module.exports)
  }
}

/***/ })

/******/ });